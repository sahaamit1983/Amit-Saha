<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    xmlns:tools="http://schemas.android.com/tools"
    android:padding="@dimen/padding_5dp"
    android:background="@android:color/white">

    <TextView
        android:id="@+id/title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textColor="@color/title_color"
        android:textSize="@dimen/text_size_large"
        android:textStyle="bold"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:text="Yes, we can do that by using a vector file. In order to add this functionality in a mobile application."
        android:padding="@dimen/padding_3dp" />

    <TextView
        android:id="@+id/description"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:textColor="@color/description_color"
        android:textSize="@dimen/text_size_medium"
        android:textStyle="bold"
        app:layout_constraintWidth_percent="0.6"
        app:layout_constraintLeft_toLeftOf="@+id/title"
        app:layout_constraintRight_toLeftOf="@+id/description_image"
        app:layout_constraintTop_toBottomOf="@+id/title"
        tools:text="yes, we can do that by using a vector file. In order to add this functionality in a mobile application, Android Studio includes a tool called the Vector Asset Studio that is used to add some predefined material icons along with your own"
        android:padding="@dimen/padding_3dp"/>

    <ImageView
        android:id="@+id/description_image"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintHeight_percent="0.7"
        app:layout_constraintWidth_percent="0.3"
        android:contentDescription="@string/description_image"
        app:layout_constraintBottom_toBottomOf="@+id/description"
        app:layout_constraintLeft_toRightOf="@+id/description"
        app:layout_constraintRight_toLeftOf="@+id/right_arrow"
        app:layout_constraintTop_toBottomOf="@+id/title"
        android:scaleType="fitXY"
        android:adjustViewBounds="true"
        />

    <ImageView
        android:id="@+id/right_arrow"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:contentDescription="@string/right_arrow"
        android:src="@drawable/ic_keyboard_arrow_right_black_36dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintRight_toRightOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>
